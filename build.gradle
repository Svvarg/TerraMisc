buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter {
            url "https://jcenter.bintray.com"
        }
        maven {
            name = "maven"
            url = "https://repo1.maven.org/maven2"
        }
        maven {
            name = "Minecraft Forge"
            url = "http://files.minecraftforge.net/maven"
        }
         maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// define the properties file
ext.configFile = file "build.prop"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'forge'
    apply plugin: 'maven'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    
    group = config.group_name
    version = config.mod_version
    archivesBaseName = "[${config.minecraft_version}]${config.mod_id}"

    minecraft {
        version = "1.7.10-10.13.4.1614-1.7.10"
        runDir = "run"
    }
    
repositories {
    mavenLocal()
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { 
    	// the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
//    maven { // the repo from which to get NEI and stuff
//        name 'test'
//        url "https://modmaven.k-4u.nl/"
//    }
//    maven { // the repo from which to get NEI and stuff
//        name 'test2'
//        url "https://maven.cil.li/"
//    }
}

dependencies {
	// Forcing version numbers for everything and using NO-NEI WAILA since the "transitive dependency resolution (gradle magic)" is currently borked.
	compile "codechicken:CodeChickenCore:1.7.10-1.0.4.35:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.127:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.4.95:dev"
	compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10"
        
        //compile "com.bioxx.tfc:TerraFirmaCraft:1.7.10-0.79.39-SE-SRV" нужны dev версии!!
        //compile files('libs/[1.7.10]TerraFirmaCraft-0.79.39-SE-SRV.jar')
}


}

//Creates a compiled de-obfuscated jar
task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'deobf'
}

//creates a jar containing only the src
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    appendix = 'src'
}

tasks.build.dependsOn('sourceJar', 'deobfJar')

dependencies {
    // Copy "[1.7.10]TerraFirmaCraft-deobf-0.79.0.jar" file into the ./libs directory
}

processResources {
	// First we just copy in the mcmod.info file
	from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.prop'

        // replaces
        expand ([
            'mod_version': project.config.mod_version,
            'tfc_version': project.config.tfc_version,
            'minecraft_version': project.config.minecraft_version,
        ])
    }
    // copy everything else, that we didn't copy before
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.prop'
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.2.1'
}
